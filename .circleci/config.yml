version: 2
workflows:
  version: 2
  test:
    jobs:
      - test-3.6
      - test-3.5
      - test-2.7
jobs:
  build: &test-template
    working_directory: ~/not-na/peng3d
    parallelism: 1
    shell: /bin/bash --login
    # If any of these refer to each other, rewrite them so that they don't or see https://circleci.com/docs/2.0/env-vars/#interpolating-environment-variables-to-set-other-environment-variables .
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
      DISPLAY: :99
    # For more information on choosing an image (or alternatively using a
    # VM instead of a container) see https://circleci.com/docs/2.0/executor-types/
    # To see the list of pre-built images that CircleCI provides for most common languages see
    # https://circleci.com/docs/2.0/circleci-images/
    # Node-browsers variant is required because we need an X-Server
    docker:
      - image: circleci/python:3.6-node-browsers
    steps:
      # Machine Setup
      #   If you break your build into multiple jobs with workflows, you will probably want to do the parts of this that are relevant in each
      # The following `checkout` command checks out your code to your working directory. In 1.0 we did this implicitly. In 2.0 you can choose where in the course of a job your code should be checked out.
      - checkout
      # Dependencies
      #   This would typically go in either a build or a build-and-test job when using workflows
      # Restore the dependency cache
      - restore_cache:
          keys:
            # This branch if available
            - v1-dep-{{ .Branch }}-
              # Default branch if not
            - v1-dep-master-
              # Any branch if there are none on the default branch - this should be unnecessary if you have your default branch configured correctly
            - v1-dep-
      # TODO: find a better solution without sudo
      - run: sudo pip install tox
      # Not needed, since tox should install requirements by itself
      #- run: pip install -r requirements.txt
      #- run: python setup.py install
      # Save dependency cache
      - save_cache:
          key: v1-dep-{{ .Branch }}-{{ epoch }}
          paths:
            # This is a broad list of cache paths to include many possible development environments
            # You can probably delete some of these entries
            - vendor/bundle
            - ~/virtualenvs
            - ~/.m2
            - ~/.ivy2
            - ~/.bundle
      
      # Install Xvfb
      - run:
          name: Starting Xvfb
          command: Xvfb :99 -screen 0 1920x1080x24
          background: true
      
      # Test
      #   This would typically be a build job when using workflows, possibly combined with build
      # This is based on your 1.0 configuration file or project settings
      - run: tox -- --junitxml=test-reports/junit.xml --x-display=$DISPLAY -v -m "'not graphical'"
  test-3.5:
    <<: *test-template
    docker:
      - image: circleci/python:3.5
  test-2.7:
    <<: *test-template
    docker:
      - image: circleci/python:2.7
