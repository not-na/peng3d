version: 2
workflows:
  version: 2
  test:
    jobs:
      - test-3.10
      - test-3.9
      - test-3.8
      - test-3.7
jobs:
  test-3.6: &test-template
    working_directory: ~/not-na/peng3d
    parallelism: 1
    shell: /bin/bash --login
    # If any of these refer to each other, rewrite them so that they don't or see https://circleci.com/docs/2.0/env-vars/#interpolating-environment-variables-to-set-other-environment-variables .
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
      DISPLAY: :99
    # For more information on choosing an image (or alternatively using a
    # VM instead of a container) see https://circleci.com/docs/2.0/executor-types/
    # To see the list of pre-built images that CircleCI provides for most common languages see
    # https://circleci.com/docs/2.0/circleci-images/
    # Node-browsers variant is required because we need an X-Server
    docker:
      - image: cimg/python:3.6-browsers
    steps:
      # Machine Setup
      #   If you break your build into multiple jobs with workflows, you will probably want to do the parts of this that are relevant in each
      - checkout
      
      # Dependencies
      #   This would typically go in either a build or a build-and-test job when using workflows
      - run:
          name: Install pip dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install tox
      
      # Test
      #   This would typically be a build job when using workflows, possibly combined with build
      # This is based on your 1.0 configuration file or project settings
      - run:
          name: Run tests
          command: | 
            . venv/bin/activate
            python3 -m tox -- --junitxml=test-reports/junit.xml -v -m "'not graphical'"
      - store_test_results:
          path: test-results
  test-3.7:
    <<: *test-template
    docker:
      - image: cimg/python:3.7-browsers
  test-3.8:
    <<: *test-template
    docker:
      - image: cimg/python:3.8-browsers
  test-3.9:
    <<: *test-template
    docker:
      - image: cimg/python:3.9-browsers
  test-3.10:
    <<: *test-template
    docker:
      - image: cimg/python:3.10-browsers
